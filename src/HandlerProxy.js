// Generated by CoffeeScript 2.3.2
(function() {
  var HandlerProxy, LOG, Proxy;

  Proxy = require("./Proxy");

  LOG = LoggerUtil.getLogger("HandlerProxy");

  /*
   * 将该代理的父类原型指向目标对象父类的原型，明确该代理的类型
   * 至此该Proxy将为目标对象类型，且不再是Proxy类型
   */
  HandlerProxy = class HandlerProxy extends Proxy {
    constructor(target) {
      super(target);
    }

    proxy(f) {
      var that;
      that = this;
      return function() {
        var callback, cb, haveParam, params, startTime;
        if (f.name === "execute") {
          startTime = moment();
          [...params] = arguments;
          if (params.length > 0) {
            haveParam = true;
          }
          callback = params.pop();
          if (typeof callback === "function") {
            cb = function() {
              var endTime;
              endTime = moment();
              LOG.info(`${that.target.constructor.name}.${f.name}操作结束  --${endTime - startTime}ms`);
              return callback.apply(this, arguments);
            };
            params.push(cb);
          } else {
            if (callback && haveParam) {
              params.push(callback);
            }
            cb = function() {
              var endTime;
              endTime = moment();
              return LOG.info(`${that.target.constructor.name}.${f.name}操作结束  --${endTime - startTime}ms`);
            };
            params.push(cb);
          }
          return f.apply(that.target, params);
        } else {
          return f.apply(that.target, arguments);
        }
      };
    }

  };

  module.exports = HandlerProxy;

}).call(this);
