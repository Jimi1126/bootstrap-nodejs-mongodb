// Generated by CoffeeScript 2.3.2
(function() {
  var ConfigContext, Context;

  Context = require('./Context');

  ConfigContext = class ConfigContext extends Context {
    exist(param, callback) {
      var cont, dao;
      cont = {};
      cont[param.db] = [param.col];
      dao = new MongoDao(__b_config.dbInfo, cont);
      return dao[param.db][param.col].selectOne(param.filter, function(err, doc) {
        if (err) {
          return callback(err);
        }
        if (!doc) {
          return callback(null, false);
        } else {
          return callback(null, true);
        }
      });
    }

    getDeploy(param, callback) {
      var dao;
      dao = new MongoDao(__b_config.dbInfo, {
        epcos: ["deploy"]
      });
      return dao.epcos.deploy.selectList(param, callback);
    }

    saveDeploy(data, callback) {
      var dao;
      dao = new MongoDao(__b_config.dbInfo, {
        epcos: ["deploy"]
      });
      return dao.epcos.deploy.insert(data, callback);
    }

    updateDeploy(filter, setter, callback) {
      var dao;
      dao = new MongoDao(__b_config.dbInfo, {
        epcos: ["deploy"]
      });
      return dao.epcos.deploy.update(filter, setter, callback);
    }

    addOrUpdateDeploy(data, callback) {
      var dao;
      dao = new MongoDao(__b_config.dbInfo, {
        epcos: ["deploy"]
      });
      return dao.epcos.deploy.addOrUpdate(data, callback);
    }

    deleteDeploy(param, callback) {
      var dao;
      dao = new MongoDao(__b_config.dbInfo, {
        epcos: ["deploy"]
      });
      return dao.epcos.deploy.delete(param, callback);
    }

  };

  module.exports = ConfigContext;

}).call(this);
