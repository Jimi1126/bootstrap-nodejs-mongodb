// Generated by CoffeeScript 2.3.2
(function() {
  var DAOProxy, LOG, Proxy,
    splice = [].splice;

  Proxy = require("./Proxy");

  LOG = loggerUtil.getLogger("DAOProxy");

  /*
   * 将该代理的父类原型指向目标对象父类的原型，明确该代理的类型
   * 至此该Proxy将为目标对象类型，且不再是Proxy类型
   */
  DAOProxy = class DAOProxy extends Proxy {
    constructor(target) {
      super(target);
      this.__proto__ = target.__proto__;
    }

    proxy(f) {
      var that;
      that = this;
      if (f.name === "init") {
        return function() {
          return f.apply(that.target, arguments);
        };
      }
      return function() {
        var callback, params, startTime;
        [...params] = arguments, [callback] = splice.call(params, -1);
        startTime = moment();
        params.push(function() {
          var endTime;
          endTime = moment();
          LOG.info(`${this.__proto__.constructor.name}.${f.name}:访问数据库${params[0]}集合${params[1]}  --${endTime - startTime}ms`);
          return callback.apply(this, arguments);
        });
        return f.apply(that.target, params);
      };
    }

  };

  module.exports = DAOProxy;

}).call(this);
