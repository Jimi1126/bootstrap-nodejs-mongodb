// Generated by CoffeeScript 2.3.2
(function() {
  var ExecHandler, Handler, LOG, LoadBillHandler;

  Handler = require("./Handler");

  ExecHandler = require("./ExecHandler");

  LOG = LoggerUtil.getLogger("LoadBillHandler");

  LoadBillHandler = class LoadBillHandler extends Handler {
    handle(item, callback) {
      LOG.info(`下载 ${item.bill_name}`);
      // 检查保单是否存在
      return mongoDao[argv.project].history.count({
        bill_name: item.bill_name.replace(".xml", "")
      }, (err, count) => {
        var cmd, exec, fetch, ref;
        if (err) {
          return callback(err);
        }
        // if num > 0
        //   msg = "已下载过 #{item.bill_name}"
        //   debug msg.bold.yellow
        //   return clean item , ()->
        //     callback new Error msg
        cmd = (ref = this.data.conf.remote) != null ? ref.fetch_bill : void 0;
        if (!cmd) {
          LOG.info(`项目配置未定义 [${entry.conf.project}]: remote.fetch_bill`);
        }
        try {
          fetch = sprintf.sprintf(cmd, {
            url: item.bill_name,
            down_url: `downFile/${item.bill_name}`
          });
        } catch (error) {
          err = error;
          LOG.info(err);
        }
        exec = new ExecHandler().queue_exec(3);
        return exec(fetch, (err, stdout, stderr, spent) => {
          if (err) {
            callback(err);
          }
          this.data.conf.data.total.files += 1;
          return callback();
        });
      });
    }

  };

  module.exports = LoadBillHandler;

}).call(this);
