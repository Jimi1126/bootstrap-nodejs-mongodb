// Generated by CoffeeScript 2.3.2
(function() {
  var DAO, DBHandler, DBProxy, LOG, MongoDAO, mongoCondig;

  mongoCondig = require("../config/config-mongo.json");

  DAO = require("./DAO");

  DBHandler = require("./DBHandler");

  DBProxy = require("./DBProxy");

  LOG = LoggerUtil.getLogger("MongoDAO");

  MongoDAO = (function() {
    class MongoDAO extends DAO {
      constructor() {
        super();
        this.init();
      }

      init() {
        var filter, perfix, postfix;
        this.DB_STATUS = 0;
        perfix = `mongodb://${mongoCondig.username}:${mongoCondig.password}@${mongoCondig.hostName}:${mongoCondig.port}/`;
        postfix = `?${mongoCondig.auth}`;
        this.projects = {};
        this.projects["conf"] = new DBProxy(new DBHandler(perfix + "projects" + postfix, "conf", mongoCondig.DB_OPTS));
        this.projects["deploy"] = new DBProxy(new DBHandler(perfix + "projects" + postfix, "deploy", mongoCondig.DB_OPTS));
        this.sys_user = {};
        this.sys_user["conf"] = new DBProxy(new DBHandler(perfix + "sys_user" + postfix, "users", mongoCondig.DB_OPTS));
        this.sys_user["deploy"] = new DBProxy(new DBHandler(perfix + "sys_user" + postfix, "session", mongoCondig.DB_OPTS));
        filter = {};
        if (argv.project) {
          filter = {
            name: argv.project
          };
        }
        this.projects.deploy.selectList(filter, (err, docs) => {
          var bindList, col, i, j, len, len1, proj_cache_db, proj_conf, ref;
          if (err) {
            LOG.error(`projects connect err ${err.stack}`);
            this.DB_STATUS = 2;
            return;
          }
          for (i = 0, len = docs.length; i < len; i++) {
            proj_conf = docs[i];
            //内存数据库 projectname_task
            if (proj_conf.task && proj_conf.task !== "") {
              proj_cache_db = `${proj_conf.name}_cache`;
              this[proj_cache_db] = {};
              this[proj_cache_db]["task"] = new DBProxy(new DBHandler(proj_conf.task, "task", mongoCondig.DB_OPTS));
              this[proj_cache_db]["examine"] = new DBProxy(new DBHandler(proj_conf.task, "examine", mongoCondig.DB_OPTS));
              LOG.info(`cache_db:${proj_cache_db} bindList:task,examine`);
            }
            //历史数据库 winter_projectname
            bindList = (ref = proj_conf.table) != null ? ref : [];
            bindList.push.apply(bindList, ["history", "sum", "wrong", "quality", "examine", "notice"]);
            this[proj_conf.name] = {};
            for (j = 0, len1 = bindList.length; j < len1; j++) {
              col = bindList[j];
              this[proj_conf.name][col] = new DBProxy(new DBHandler(proj_conf.task, col, mongoCondig.DB_OPTS));
            }
            LOG.info(`history_db:${proj_conf.name} bindList:${bindList.toString()}`);
          }
          return this.DB_STATUS = 1;
        });
      }

    };

    // 初始化状态：-1待加载，0加载中，1加载完成，2加载异常
    MongoDAO.prototype.DB_STATUS = -1;

    return MongoDAO;

  }).call(this);

  module.exports = MongoDAO;

}).call(this);
