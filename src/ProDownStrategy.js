// Generated by CoffeeScript 2.3.2
(function() {
  /*
   * 预下载策略
   */
  var Handler, Istrategy, ProDownStrategy;

  Istrategy = require("./Istrategy");

  Handler = require("./Handler");

  ProDownStrategy = (function() {
    class ProDownStrategy extends Istrategy {
      constructor(execOrderList) {
        var handler, i, j, len, moduleName;
        super();
        if (execOrderList && execOrderList instanceof Array) {
          for (i = j = 0, len = execOrderList.length; j < len; i = ++j) {
            moduleName = execOrderList[i];
            if (!(moduleName || moduleName !== "")) {
              continue;
            }
            handler = require('./' + moduleName);
            this.handlerList.push(new HandlerProxy(new handler(this.data)));
          }
        }
      }

      execute(callback) {
        var handlerProxy, i, j, len, ref, results;
        if (this.handlerList.length === 0) {
          callback();
        }
        ref = this.handlerList;
        results = [];
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          handlerProxy = ref[i];
          handlerProxy.setLastHandler(this.handlerList[i - 1]);
          if (this.handlerList[i + 1]) {
            handlerProxy.setNextHandler(this.handlerList[i + 1]);
          } else {
            handlerProxy.setNextHandler(callback);
          }
          if (i === 0) {
            results.push(handlerProxy.execute());
          } else {
            results.push(void 0);
          }
        }
        return results;
      }

    };

    /*
     * 策略的业务数据，操作者都有权访问并修改
     * 一个操作者将访问上一位操作者处理完的数据
     * 操作者通过verify方法来检查数据并决定是否执行操作
     */
    ProDownStrategy.prototype.data = {};

    //# 操作者名称列表，策略会根据这个顺序调用操作者
    ProDownStrategy.prototype.handlerList = [];

    return ProDownStrategy;

  }).call(this);

  module.exports = ProDownStrategy;

}).call(this);
