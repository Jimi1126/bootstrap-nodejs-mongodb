// Generated by CoffeeScript 2.3.2
(function() {
  var ExecHandler, Handler, LOG, ScanHandler;

  Handler = require("./Handler");

  ExecHandler = require("./ExecHandler");

  LOG = LoggerUtil.getLogger("ScanHandler");

  ScanHandler = class ScanHandler extends Handler {
    handle(callback) {
      var exec, that;
      that = this;
      if (!that.data.deploy.project) {
        LOG.warn(`项目未配置 [${argv.project}]`);
        return callback(null);
      }
      if (!that.data.deploy.images) {
        LOG.warn(`项目未进行图片配置 [${argv.project}]`);
        return callback(null);
      }
      exec = new ExecHandler().queue_exec();
      return async.each(that.data.deploy.images, function(image, cb) {
        var cmd, cmd_display, start_at;
        if (!image.d_url) {
          return cb(null);
        }
        cmd = image.d_url;
        if (!cmd.startsWith("curl")) {
          cmd = `curl ${cmd}`;
        }
        cmd_display = cmd != null ? cmd.replace(/\s+\-u\s+\S+/g, " -u '***:***'") : void 0; //不打印密码
        LOG.info(`开始扫描 image.d_url: ${cmd_display}`);
        start_at = moment();
        return exec(cmd, function(error, lines, stderr) {
          lines = ("" + lines).trim().split(/[\r\n]+/);
          LOG.info(`扫描结束, ${lines.length} 行, ${moment() - start_at}ms`);
          image.lines = lines;
          return cb(error);
        });
      }, callback);
    }

  };

  // execFuns = []
  // cmd = if cmd.length then cmd else [cmd]
  // exec = new ExecHandler().queue_exec()
  // async.each cmd, (exec_cmd, cb) =>
  //   cmd_display = exec_cmd?.replace /\s+\-u\s+\S+/g, " -u '***:***'" #不打印密码
  //   LOG.info "开始扫描 remote.scan: #{cmd_display}"
  //   start_at = moment()
  //   exec exec_cmd, (error, lines, stderr) =>
  //     lines = ("" + lines).trim().split /[\r\n]+/
  //     LOG.info "扫描结束, #{lines.length} 行, #{moment() - start_at}ms"
  //     @data.lineObj ?= {}
  //     @data.lineObj[exec_cmd] = lines
  //     cb error
  // , callback
  module.exports = ScanHandler;

}).call(this);
